tinymce.PluginManager.add('mention', function(editor) {

    // Define a regex pattern to match the user input
    var pattern = /@[a-zA-Z]+/g;
    String.prototype.replaceAt = function(index, replacement) {
        return this.substring(0, index) + replacement + this.substring(index + replacement.length);
    }
  
    // Define a list of users for the autocomplete dropdown
    var users = [
      { name: 'Andrew', email: 'andrew@example.com', avatar: 'https://i.pravatar.cc/40?u=andrew' },
      { name: 'Bob', email: 'bob@example.com', avatar: 'https://i.pravatar.cc/40?u=bob' },
      { name: 'Charlie', email: 'charlie@example.com', avatar: 'https://i.pravatar.cc/40?u=charlie' }
    ];
  
    // Define a function to create the autocomplete dropdown
    function createDropdown() {
      var dropdown = document.createElement('ul');
      dropdown.classList.add('mentions-dropdown');
  
      users.forEach(function(user) {
        var item = document.createElement('li');
        item.innerHTML = '<img src="' + user.avatar + '"> ' + user.name;
        item.addEventListener('mousedown', function(e) {
          e.preventDefault();
          insertLink(user);
        });
        dropdown.appendChild(item);
      });
  
      return dropdown;
    }
  
    // Define a function to insert the selected link
    function insertLink(user) {
      var content = editor.getContent();
      //var match = content.match(pattern).pop(); // get the most recent match
  
      var link = '@<a href="https://example.com/' + user.name + '">' + "Rajesh" + '</a>';
      content = content.replaceAt(content.lastIndexOf("@"), link); // replace the user input with the link
  
      editor.setContent(content);
      var inputField = editor.getDoc().getElementById('#mytextarea');

      editor.selection.setCursorLocation(inputField,content.length)
      editor.focus();
    }
  
    // Register a listener for the "keyup" event
    editor.on('keydown', function(e) {
      if (e.key === '@') {
        var dropdown = createDropdown();
        editor.getContainer().appendChild(dropdown);
      } else {
        var dropdown = editor.getContainer().querySelector('.mentions-dropdown');
        if (dropdown) {
          dropdown.parentNode.removeChild(dropdown);
        }
      }
  
      var dropdownItems = editor.getContainer().querySelectorAll('.mentions-dropdown li');
      var searchTerm = e.target.innerText.match(pattern)
      
      dropdownItems.forEach(function(item) {
        
        var username = item.innerText.substring(item.innerText.indexOf(' ') + 1);
        if (true) {
          item.style.display = 'block';
          console.log("block");
         
        } else {
          item.style.display = 'none';
          console.log("none");
         
        }
      });
    });
  
    // Register a listener for the "blur" event
    editor.on('blur', function(e) {
      var dropdown = editor.getContainer().querySelector('.mentions-dropdown');
      if (dropdown) {
        dropdown.parentNode.removeChild(dropdown);
      }
    });
  });
  